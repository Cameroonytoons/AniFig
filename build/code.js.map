{
  "version": 3,
  "sources": ["../code.ts"],
  "sourcesContent": ["/// <reference types=\"@figma/plugin-typings\" />\nimport { AnimationPreset, Message } from './src/types';\n\n// Show UI with proper dimensions and styling\nfigma.showUI(__html__, { \n  width: 320, \n  height: 480, \n  themeColors: true,\n  title: 'Animation Library Manager'\n});\n\nlet animationStore: { [key: string]: AnimationPreset } = {};\n\n// Initialize plugin with proper error handling\n(async () => {\n  try {\n    // Load stored animations\n    const stored = await figma.clientStorage.getAsync('animations');\n    if (stored) {\n      animationStore = stored as { [key: string]: AnimationPreset };\n    }\n\n    // Setup message handlers\n    figma.ui.onmessage = async (msg: Message) => {\n      try {\n        switch (msg.type) {\n          case 'check-ready':\n            // Respond to ready check\n            figma.ui.postMessage({ type: 'plugin-ready' });\n            break;\n\n          case 'create-animation':\n            if (msg.animation) {\n              const { name, properties } = msg.animation;\n              if (animationStore[name]) {\n                figma.notify(`Animation \"${name}\" already exists`, { error: true });\n                return;\n              }\n              animationStore[name] = properties;\n              await figma.clientStorage.setAsync('animations', animationStore);\n              figma.notify(`Animation \"${name}\" created successfully`);\n            }\n            break;\n\n          case 'apply-animation':\n            const selection = figma.currentPage.selection;\n            if (selection.length === 0) {\n              figma.notify('Please select at least one object', { error: true });\n              return;\n            }\n\n            if (msg.animationName && animationStore[msg.animationName]) {\n              const animation = animationStore[msg.animationName];\n              let appliedCount = 0;\n\n              for (const node of selection) {\n                if ('opacity' in node || 'x' in node || 'rotation' in node) {\n                  node.setPluginData('animation', msg.animationName);\n                  await applyAnimation(\n                    node as SceneNode & { opacity?: number, x?: number, rotation?: number }, \n                    animation\n                  );\n                  appliedCount++;\n                }\n              }\n\n              figma.notify(`Animation applied to ${appliedCount} object(s)`);\n            } else {\n              figma.notify('Animation not found', { error: true });\n            }\n            break;\n\n          case 'find-similar':\n            const similar = findSimilarAnimations();\n            if (similar.length > 0) {\n              figma.ui.postMessage({ \n                type: 'similar-found', \n                animations: similar.map(([name, nodes]) => [\n                  name, \n                  nodes.map(n => ({ id: n.id, name: n.name }))\n                ])\n              });\n            } else {\n              figma.notify('No similar animations found');\n            }\n            break;\n\n          case 'modify-shared':\n            if (msg.animationName && msg.newProperties) {\n              animationStore[msg.animationName] = msg.newProperties;\n              await figma.clientStorage.setAsync('animations', animationStore);\n              await updateSharedAnimations(msg.animationName, msg.newProperties);\n              figma.notify(`Animation \"${msg.animationName}\" updated successfully`);\n            }\n            break;\n        }\n      } catch (error) {\n        console.error('Plugin error:', error);\n        figma.notify('An error occurred', { error: true });\n      }\n    };\n\n    // Initialize plugin state and notify UI\n    console.log('Plugin initialized');\n    figma.ui.postMessage({ type: 'plugin-ready' });\n\n    // Handle selection changes\n    figma.on('selectionchange', () => {\n      const nodes = figma.currentPage.selection;\n      nodes.forEach(node => {\n        const animationName = node.getPluginData('animation');\n        if (animationName && animationStore[animationName]) {\n          applyAnimation(\n            node as SceneNode & { opacity?: number, x?: number, rotation?: number },\n            animationStore[animationName]\n          );\n        }\n      });\n    });\n\n    figma.notify('Animation Library Manager initialized');\n  } catch (error) {\n    console.error('Initialization error:', error);\n    figma.notify('Failed to initialize plugin', { error: true });\n  }\n})();\n\n// Helper functions remain unchanged\nasync function applyAnimation(\n  node: SceneNode & { opacity?: number, x?: number, rotation?: number }, \n  animation: AnimationPreset\n) {\n  const { duration, easing, properties } = animation;\n\n  // Store animation properties\n  node.setPluginData('animationProps', JSON.stringify({\n    duration,\n    easing,\n    properties\n  }));\n\n  // Remove existing controllers\n  const existingControllers = figma.currentPage.findAll(n => \n    n.getPluginData('targetNode') === node.id\n  );\n  existingControllers.forEach(n => n.remove());\n\n  // Apply animation properties\n  for (const [key, value] of Object.entries(properties)) {\n    if (key in node) {\n      (node as any)[key] = value.from;\n\n      const transition = figma.createFrame();\n      transition.name = `${node.name}-transition`;\n      transition.resize(1, 1);\n      transition.opacity = 0;\n      transition.locked = true;\n\n      // Store transition data\n      transition.setPluginData('animationType', key);\n      transition.setPluginData('targetNode', node.id);\n      transition.setPluginData('animationStart', value.from.toString());\n      transition.setPluginData('animationEnd', value.to.toString());\n      transition.setPluginData('duration', duration.toString());\n      transition.setPluginData('easing', easing);\n\n      // Position transition controller\n      if ('absoluteTransform' in node) {\n        const nodeTransform = node.absoluteTransform;\n        transition.x = nodeTransform[0][2];\n        transition.y = nodeTransform[1][2] - 20;\n      } else {\n        transition.x = 0;\n        transition.y = 0;\n      }\n\n      // Set relaunch data\n      node.setRelaunchData({ \n        animate: `Play ${animation.type} animation (${duration}ms ${easing})`\n      });\n    }\n  }\n}\n\nfunction findSimilarAnimations(): [string, SceneNode[]][] {\n  const nodes = figma.currentPage.findAll(node => \n    node.getPluginData('animation') !== ''\n  );\n\n  const animationMap = new Map<string, SceneNode[]>();\n\n  nodes.forEach(node => {\n    const animationName = node.getPluginData('animation');\n    if (animationName) {\n      if (!animationMap.has(animationName)) {\n        animationMap.set(animationName, []);\n      }\n      animationMap.get(animationName)!.push(node);\n    }\n  });\n\n  return Array.from(animationMap.entries())\n    .filter(([_, nodes]) => nodes.length > 1);\n}\n\nasync function updateSharedAnimations(name: string, properties: AnimationPreset) {\n  const nodes = figma.currentPage.findAll(node => \n    node.getPluginData('animation') === name\n  );\n\n  for (const node of nodes) {\n    if ('opacity' in node || 'x' in node || 'rotation' in node) {\n      await applyAnimation(\n        node as SceneNode & { opacity?: number, x?: number, rotation?: number }, \n        properties\n      );\n    }\n  }\n}"],
  "mappings": "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",
  "names": ["nodes"]
}
