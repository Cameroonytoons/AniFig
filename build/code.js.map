{
  "version": 3,
  "sources": ["../code.ts"],
  "sourcesContent": ["/// <reference types=\"@figma/plugin-typings\" />\nimport { AnimationPreset, Message } from './src/types';\n\nconsole.log('Starting plugin initialization...');\n\n// Show UI with proper dimensions and styling\nfigma.showUI(__html__, { \n  width: 320, \n  height: 480, \n  themeColors: true,\n  title: 'Animation Library Manager'\n});\n\nlet animationStore: { [key: string]: AnimationPreset } = {};\nlet isInitialized = false;\n\n// Initialize plugin with proper error handling\nasync function initializePlugin() {\n  console.log('Initializing plugin...');\n  try {\n    // Load stored animations\n    const stored = await figma.clientStorage.getAsync('animations');\n    if (stored) {\n      animationStore = stored as { [key: string]: AnimationPreset };\n      console.log('Successfully loaded stored animations');\n    }\n\n    isInitialized = true;\n    console.log('Plugin initialized successfully');\n\n    // Notify UI of successful initialization\n    figma.ui.postMessage({ \n      type: 'plugin-ready',\n      state: { isInitialized: true }\n    });\n\n  } catch (error) {\n    console.error('Initialization error:', error);\n    isInitialized = false;\n    figma.ui.postMessage({ \n      type: 'initialization-error',\n      error: error instanceof Error ? error.message : 'Unknown initialization error'\n    });\n    throw error;\n  }\n}\n\n// Setup message handlers with improved error handling\nfigma.ui.onmessage = async (msg: Message) => {\n  console.log('Received message:', msg.type);\n\n  if (!isInitialized && msg.type !== 'check-ready') {\n    console.warn('Plugin not initialized, rejecting message:', msg.type);\n    figma.notify('Plugin is still initializing', { error: true });\n    return;\n  }\n\n  try {\n    switch (msg.type) {\n      case 'check-ready':\n        console.log('Checking plugin ready state:', isInitialized);\n        figma.ui.postMessage({ \n          type: 'plugin-ready',\n          state: { isInitialized }\n        });\n        break;\n\n      case 'create-animation':\n        if (msg.animation) {\n          const { name, properties } = msg.animation;\n          if (animationStore[name]) {\n            figma.notify(`Animation \"${name}\" already exists`, { error: true });\n            return;\n          }\n          animationStore[name] = properties;\n          await figma.clientStorage.setAsync('animations', animationStore);\n          figma.notify(`Animation \"${name}\" created successfully`);\n        }\n        break;\n\n      case 'apply-animation':\n        handleApplyAnimation(msg);\n        break;\n\n      case 'find-similar':\n        handleFindSimilar();\n        break;\n\n      case 'modify-shared':\n        handleModifyShared(msg);\n        break;\n    }\n  } catch (error) {\n    console.error('Error handling message:', msg.type, error);\n    figma.notify(error instanceof Error ? error.message : 'An error occurred', { error: true });\n  }\n};\n\n// Initialize the plugin\ninitializePlugin().catch(error => {\n  console.error('Failed to initialize plugin:', error);\n  figma.notify('Failed to initialize plugin', { error: true });\n});\n\n// Helper functions moved to separate function declarations for better error tracking\nasync function handleApplyAnimation(msg: Message) {\n  if (msg.type !== 'apply-animation') return;\n\n  const selection = figma.currentPage.selection;\n  if (selection.length === 0) {\n    figma.notify('Please select at least one object', { error: true });\n    return;\n  }\n\n  if (msg.animationName && animationStore[msg.animationName]) {\n    const animation = animationStore[msg.animationName];\n    let appliedCount = 0;\n\n    for (const node of selection) {\n      if ('opacity' in node || 'x' in node || 'rotation' in node) {\n        node.setPluginData('animation', msg.animationName);\n        await applyAnimation(\n          node as SceneNode & { opacity?: number, x?: number, rotation?: number }, \n          animation\n        );\n        appliedCount++;\n      }\n    }\n\n    figma.notify(`Animation applied to ${appliedCount} object(s)`);\n  } else {\n    figma.notify('Animation not found', { error: true });\n  }\n}\n\nfunction handleFindSimilar() {\n  const similar = findSimilarAnimations();\n  if (similar.length > 0) {\n    figma.ui.postMessage({ \n      type: 'similar-found', \n      animations: similar.map(([name, nodes]) => [\n        name, \n        nodes.map(n => ({ id: n.id, name: n.name }))\n      ])\n    });\n  } else {\n    figma.notify('No similar animations found');\n  }\n}\n\nasync function handleModifyShared(msg: Message) {\n  if (msg.type !== 'modify-shared') return;\n\n  if (msg.animationName && msg.newProperties) {\n    animationStore[msg.animationName] = msg.newProperties;\n    await figma.clientStorage.setAsync('animations', animationStore);\n    await updateSharedAnimations(msg.animationName, msg.newProperties);\n    figma.notify(`Animation \"${msg.animationName}\" updated successfully`);\n  }\n}\n\n// Existing helper functions remain unchanged\nasync function applyAnimation(node: SceneNode & { opacity?: number, x?: number, rotation?: number }, animation: AnimationPreset) {\n  const { duration, easing, properties } = animation;\n  node.setPluginData('animationProps', JSON.stringify({ duration, easing, properties }));\n\n  const existingControllers = figma.currentPage.findAll(n => \n    n.getPluginData('targetNode') === node.id\n  );\n  existingControllers.forEach(n => n.remove());\n\n  for (const [key, value] of Object.entries(properties)) {\n    if (key in node) {\n      (node as any)[key] = value.from;\n\n      const transition = figma.createFrame();\n      transition.name = `${node.name}-transition`;\n      transition.resize(1, 1);\n      transition.opacity = 0;\n      transition.locked = true;\n\n      transition.setPluginData('animationType', key);\n      transition.setPluginData('targetNode', node.id);\n      transition.setPluginData('animationStart', value.from.toString());\n      transition.setPluginData('animationEnd', value.to.toString());\n      transition.setPluginData('duration', duration.toString());\n      transition.setPluginData('easing', easing);\n\n      if ('absoluteTransform' in node) {\n        const nodeTransform = node.absoluteTransform;\n        transition.x = nodeTransform[0][2];\n        transition.y = nodeTransform[1][2] - 20;\n      } else {\n        transition.x = 0;\n        transition.y = 0;\n      }\n\n      node.setRelaunchData({ \n        animate: `Play ${animation.type} animation (${duration}ms ${easing})`\n      });\n    }\n  }\n}\n\nfunction findSimilarAnimations(): [string, SceneNode[]][] {\n  const nodes = figma.currentPage.findAll(node => node.getPluginData('animation') !== '');\n  const animationMap = new Map<string, SceneNode[]>();\n\n  nodes.forEach(node => {\n    const animationName = node.getPluginData('animation');\n    if (animationName) {\n      if (!animationMap.has(animationName)) {\n        animationMap.set(animationName, []);\n      }\n      animationMap.get(animationName)!.push(node);\n    }\n  });\n\n  return Array.from(animationMap.entries())\n    .filter(([_, nodes]) => nodes.length > 1);\n}\n\nasync function updateSharedAnimations(name: string, properties: AnimationPreset) {\n  const nodes = figma.currentPage.findAll(node => node.getPluginData('animation') === name);\n\n  for (const node of nodes) {\n    if ('opacity' in node || 'x' in node || 'rotation' in node) {\n      await applyAnimation(\n        node as SceneNode & { opacity?: number, x?: number, rotation?: number }, \n        properties\n      );\n    }\n  }\n}\n\nfigma.on('selectionchange', () => {\n  if (!isInitialized) return;\n\n  const nodes = figma.currentPage.selection;\n  nodes.forEach(node => {\n    const animationName = node.getPluginData('animation');\n    if (animationName && animationStore[animationName]) {\n      applyAnimation(\n        node as SceneNode & { opacity?: number, x?: number, rotation?: number },\n        animationStore[animationName]\n      );\n    }\n  });\n});"],
  "mappings": "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",
  "names": ["nodes"]
}
